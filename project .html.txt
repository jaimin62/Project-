<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Tic Tac Toe</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      text-align: center;
      margin-top: 50px;
    }
    h1 {
      color: #333;
    }
    .board {
      display: grid;
      grid-template-columns: repeat(3, 100px);
      grid-template-rows: repeat(3, 100px);
      gap: 5px;
      margin: 20px auto;
      width: max-content;
    }
    .cell {
      background-color: #f2f2f2;
      font-size: 2.5rem;
      display: flex;
      align-items: center;
      justify-content: center;
      cursor: pointer;
      border: 2px solid #ccc;
      transition: background 0.3s;
    }
    .cell:hover {
      background-color: #e0e0e0;
    }
    .message {
      margin-top: 20px;
      font-size: 1.2rem;
    }
    button {
      margin-top: 20px;
      padding: 10px 20px;
      font-size: 1rem;
    }
  </style>
</head>
<body>

  <h1>Tic Tac Toe</h1>
  <div class="board" id="board"></div>
  <div class="message" id="message"></div>
  <button onclick="resetGame()">Restart Game</button>

  <script>
    const board = document.getElementById('board');
    const message = document.getElementById('message');
    let currentPlayer = 'X';
    let gameActive = true;
    const cells = [];

    function createBoard() {
      for (let i = 0; i < 9; i++) {
        const cell = document.createElement('div');
        cell.classList.add('cell');
        cell.dataset.index = i;
        cell.addEventListener('click', handleClick);
        board.appendChild(cell);
        cells.push(cell);
      }
    }

    function handleClick(e) {
      const cell = e.target;
      if (cell.textContent !== '' || !gameActive) return;

      cell.textContent = currentPlayer;
      if (checkWinner()) {
        message.textContent = `Player ${currentPlayer} wins! ðŸŽ‰`;
        gameActive = false;
      } else if (isDraw()) {
        message.textContent = "It's a draw!";
        gameActive = false;
      } else {
        currentPlayer = currentPlayer === 'X' ? 'O' : 'X';
        message.textContent = `Player ${currentPlayer}'s turn`;
      }
    }

    function checkWinner() {
      const winPatterns = [
        [0,1,2], [3,4,5], [6,7,8],
        [0,3,6], [1,4,7], [2,5,8],
        [0,4,8], [2,4,6]
      ];
      return winPatterns.some(pattern => {
        const [a, b, c] = pattern;
        return (
          cells[a].textContent &&
          cells[a].textContent === cells[b].textContent &&
          cells[b].textContent === cells[c].textContent
        );
      });
    }

    function isDraw() {
      return cells.every(cell => cell.textContent !== '');
    }

    function resetGame() {
      cells.forEach(cell => cell.textContent = '');
      currentPlayer = 'X';
      message.textContent = "Player X's turn";
      gameActive = true;
    }

    // Initialize the game
    createBoard();
    message.textContent = "Player X's turn";
  </script>

</body>
</html>
